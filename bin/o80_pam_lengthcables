#! /usr/bin/env python

import time
import math
import o80
import o80_pam
# default id when starting pam_robot executable
segment_id = "o80_pam_robot"
frontend = o80_pam.FrontEnd(segment_id)

nb_dofs = 4

# robot_state = pam_robot.robot_state.Robot_state(nb_dofs,True)
# pam_robot.commands.init(nb_dofs,True)


#tension_pressure = 14000

# putting all muscles to tension
#tension_pressures = {dof:tension_pressure for dof in range(nb_dofs)}
p0_ago = [8000, 8000, 24000, 24000]
p0_ant = [24000, 24000, 8000, 8000]
p1_ago = [24000, 24000, 8000, 8000]
p1_ant = [8000, 8000, 24000, 24000]
p2_ago = [22000, 20000, 16000, 8000]
p2_ant = [13000,20000,16000,8000]

slow   = 2000
fast   = 2000
dur = 1000

for x in range(10):
    # go to start position p0

    frontend.add_command(p0_ago,
                         p0_ant,
                         o80.Duration_us.milliseconds(dur),
                         o80.Mode.OVERWRITE)
    frontend.pulse_and_wait()


    # input("Press Enter to continue...")
    frontend.add_command(p1_ago,
                         p1_ant,
                         o80.Duration_us.milliseconds(dur),
                         o80.Mode.OVERWRITE)
    frontend.pulse_and_wait()
    # input("Press Enter to continue...")
    # hit p1
    # pam_robot.commands.go_to_posture( p1_ago, # agonist muscles
    #                         p1_ant, # antagonist muscles
    #                         True, # blocking
    #                         duration=pam_robot.duration.from_milliseconds(dur) ) # units of pressure per second

    # raw_input("Press Enter to continue...")

    # pam_robot.commands.go_to_posture( p2_ago, # agonist muscles
    #                         p2_ant, # antagonist muscles
    #                         True, # blocking
    #                         speed=fast ) # units of pressure per second
    #
    # raw_input("Press Enter to continue...")

# if the system miss a control iteration, printing a warning
# def on_missing():
#     print ("---- warning: control deadline missed !")
#
# # if nothing happens for a while (server killed ?), we exit
# timeout = 0.5
# def on_timeout():
#     print ("---- failed to get update on control dealine, exiting")
#     exit()
#
frontend.add_command(p0_ago,
                     p0_ant,
                     o80.Duration_us.milliseconds(dur),
                     o80.Mode.OVERWRITE)
frontend.pulse_and_wait()


# putting muscles back to low pressure
relax_pressure = 8000
relax_pressures = [relax_pressure for dof in range(nb_dofs)]
frontend.add_command(relax_pressures,
                     relax_pressures,
                     o80.Speed.per_second(10000), # 4000 unit of pressure per second
                     o80.Mode.OVERWRITE)
frontend.pulse_and_wait()
