#!/usr/bin/env python3

import sys
import time
import signal_handler
import o80_pam
from lightargs import BrightArgs,FileExists


def _print_stats(file_path):

    first_observation = None
    first_iteration = None
    current_iteration = None
    first_time_stamp = None
    current_time_stamp = None
    missed_iterations = 0
    nb_observations = 0

    # read_file returns a generator upon instances
    # of Observations serialized in the file
    for observation in o80_pam.read_file(file_path):
        iteration = observation.get_iteration()
        time_stamp = observation.get_time_stamp()
        # saving info about the first Observations
        if first_iteration is None:
            first_iteration = iteration
            first_time_stamp = time_stamp
            current_iteration = iteration
            first_observation = observation
        # if 2 observation's iteration are separate by more than 1,
        # it means the logger missed one observation during recording
        if iteration-current_iteration>1:
            missed_iterations += (iteration-current_iteration)
        current_iteration = iteration
        nb_observations += 1

    # printing some infos
    print("\nread {} observations".format(nb_observations))
    print("collected over a duration of {} seconds".format((time_stamp-first_time_stamp)*1e-9))
    print("{} observations are missing\n".format(missed_iterations))
    print("-First observation-")
    print(first_observation)
    print("-Last observation-")
    print(observation)
    print()

def _configure():
    config = BrightArgs("o80 PAM log file stats")
    config.add_option("file_path",
                      o80_pam.FileManager().latest(),
                      "absolute path to the log file",
                      str,
                      integrity_checks=[FileExists()])
    change_all=False
    finished = config.dialog(change_all,sys.argv[1:])
    if not finished:
        return None
    return config


def execute():
    config = _configure()
    if config is None:
        return
    _print_stats(config.file_path)

    
if __name__ == "__main__":
    execute()
